import os
from aiogram import Bot, Dispatcher, types, executor

TOKEN = os.getenv("TG_BOT_TOKEN", "your-token-here")
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –°–∏–º—É–ª—è—Ü–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ (–ª—É—á—à–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å FastAPI/Broker)
CAMPAIGNS = {"1": "In progress", "2": "Completed", "3": "Failed"}

@dp.message_handler(commands=["start"])
async def start_cmd(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ LastUser Engine Telegram-–±–æ—Ç.\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/status ‚Äî —Å—Ç–∞—Ç—É—Å –∫–∞–º–ø–∞–Ω–∏–π\n/job <id> ‚Äî —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏\n/retry <id> ‚Äî –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–¥–∞—á—É")

@dp.message_handler(commands=["status"])
async def status_cmd(message: types.Message):
    txt = "\n".join([f"–ö–∞–º–ø–∞–Ω–∏—è {cid}: {st}" for cid, st in CAMPAIGNS.items()])
    await message.answer(f"–°—Ç–∞—Ç—É—Å—ã –∫–∞–º–ø–∞–Ω–∏–π:\n{txt}")

@dp.message_handler(lambda m: m.text.startswith("/job"))
async def job_cmd(message: types.Message):
    job_id = message.text.split(" ")[-1]
    # –ò–º–∏—Ç–∞—Ü–∏—è (—Ä–µ–∞–ª—å–Ω–æ ‚Äî –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ backend)
    await message.answer(f"–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ {job_id}: done (–ø—Ä–∏–º–µ—Ä)")

@dp.message_handler(lambda m: m.text.startswith("/retry"))
async def retry_cmd(message: types.Message):
    job_id = message.text.split(" ")[-1]
    await message.answer(f"–ó–∞–¥–∞—á–∞ {job_id} –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∞ –ø–æ–≤—Ç–æ—Ä")

if __name__ == "__main__":
    executor.start_polling(dp)
